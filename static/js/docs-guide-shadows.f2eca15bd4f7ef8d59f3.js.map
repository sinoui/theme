{"version":3,"sources":["D:/Users/jacki/Documents/GitHub/theme/docs/components/DemoCard.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/components/ShadowsDemo.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/guide/shadows.mdx"],"names":["DemoCard","styled","div","theme","palette","grey","type","Box","background","paper","text","primary","typography","body1","fontSize","elevation","shadows","divider","ShadowsDemo","useContext","ThemeContext","ranges","Array","length","fill","map","_","index","key","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yoBAEA,IAAMA,EAAWC,IAAOC,IAAV,KACE,oBACZC,MACEC,QAAWC,EAFD,EAECA,KAFD,MAIE,UAJF,EAEOC,KAEKD,EAAK,KAAO,UAQzBL,I,khBCXf,IAAMO,EAAMN,IAAOC,IAAV,KAKa,qBAAGC,MAAkBC,QAAQI,WAAWC,SACnD,qBAAGN,MAAkBC,QAAQM,KAAKC,WAC9B,qBAAGR,MAAkBS,WAAWC,MAAMC,YAIrC,gBAAGX,EAAH,EAAGA,MAAOY,EAAV,EAAUA,UAAV,OAA0BZ,EAAMa,QAAQD,MAEpD,gBAAGA,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,MAAd,OACc,IAAdY,GAAA,kCAEoBZ,EAAMC,QAAQa,QAFlC,YAMW,SAASC,IAAe,IAC7BF,EAAYG,qBAAWC,KAAvBJ,QACFK,EAAS,IAAIC,MAAMN,EAAQO,QAAQC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAcA,KAEnE,OACE,kBAAC,EAAD,KACGN,EAAOI,KAAI,SAACE,GAAD,OACV,kBAACpB,EAAD,CAAKqB,IAAG,UAAKD,GAASZ,UAAWY,GACpB,IAAVA,EAAc,mBAAd,UAA4BA,EAA5B,W,gOCzBX,IAKME,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,yLAA2C,+BAAGC,WAAW,KAAQ,CAC7D,KAAQ,gEAD+B,cAA3C,sEAEuC,+BAAGA,WAAW,KAAQ,CACzD,KAAQ,yBAD2B,8CAFvC,UAKA,iBAAQ,CACN,GAAM,gBADR,gBAGA,0CAAU,0BAAYA,WAAW,KAAvB,iBAAV,qWACA,sBACE,kBAAIA,WAAW,MAAf,qCACA,kBAAIA,WAAW,MAAf,4CAEF,mEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iOASL,iBAAQ,CACN,GAAM,8CADR,8CAGA,qOACA,YAAChB,EAAD,CAAae,QAAQ,gBACrB,gQACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,iDAAY,0BAAYC,WAAW,KAAvB,iBAAZ,+CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yM,8KAgBTJ,EAAWK,gBAAiB","file":"static/js/docs-guide-shadows.6f883b31.js","sourcesContent":["import styled from 'styled-components';\n\nconst DemoCard = styled.div`\n  background: ${({\n    theme: {\n      palette: { grey, type },\n    },\n  }) => (type === 'light' ? grey[100] : '#333')};\n  display: flex;\n  flex-wrap: wrap;\n  padding: 8px;\n  border-radius: 4px;\n  justify-content: space-around;\n`;\n\nexport default DemoCard;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport DemoCard from './DemoCard';\n\nconst Box = styled.div<{ elevation: number }>`\n  box-sizing: border-box;\n  height: 80px;\n  width: 80px;\n  margin: 36px;\n  background-color: ${({ theme }) => theme.palette.background.paper};\n  color: ${({ theme }) => theme.palette.text.primary};\n  font-size: ${({ theme }) => theme.typography.body1.fontSize};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: ${({ theme, elevation }) => theme.shadows[elevation]};\n  border-radius: 4px;\n  ${({ elevation, theme }) =>\n    elevation === 0 &&\n    `\n    border: 1px solid ${theme.palette.divider};\n  `}\n`;\n\nexport default function ShadowsDemo() {\n  const { shadows } = useContext(ThemeContext);\n  const ranges = new Array(shadows.length).fill(0).map((_, index) => index);\n\n  return (\n    <DemoCard>\n      {ranges.map((index) => (\n        <Box key={`${index}`} elevation={index}>\n          {index === 0 ? '0dp+边框' : `${index}dp`}\n        </Box>\n      ))}\n    </DemoCard>\n  );\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport ShadowsDemo from '@/ShadowsDemo';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"阴影\"\n    }}>{`阴影`}</h1>\n    <p>{`阴影是用来反映元素深度的最常用的手段。在 web 中，使用 css 的 `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-shadow\"\n      }}>{`box-shadow`}</a>{` 实现。更多设计考量参见`}<a parentName=\"p\" {...{\n        \"href\": \"md-light-and-shadows\"\n      }}>{`环境：光和阴影`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"使用\"\n    }}>{`使用`}</h2>\n    <p>{`可以从`}<inlineCode parentName=\"p\">{`theme.shadows`}</inlineCode>{` 获取到阴影。阴影一共分成 25 级，从 0 到 24。这些数字即是元素的海拔值。例如给卡片组件添加上阴影。规范中给出的卡片海拔参考值：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`静止海拔：1dp`}</li>\n      <li parentName=\"ul\">{`选中时海拔：8dp`}</li>\n    </ul>\n    <p>{`参考实现如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import styled from 'styled-components';\n\nconst Card = styled.div\\`\n  background-color: \\${({ theme }) => theme.palette.background.paper};\n  box-shadow: \\${({ theme, selected }) => theme.shadows[selected ? 8 : 1]};\n\\`;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"不同海拔的阴影\"\n    }}>{`不同海拔的阴影`}</h2>\n    <p>{`元素的海拔越高，阴影越大、越柔软；元素的海拔越低，阴影越小、越锐利。`}</p>\n    <ShadowsDemo mdxType=\"ShadowsDemo\" />\n    <p>{`注意：海拔为 0 时，可能需要使用其他技巧确定元素的边缘，如上面示例中使用了边框。`}</p>\n    <h2 {...{\n      \"id\": \"定制\"\n    }}>{`定制`}</h2>\n    <p>{`可以通过 `}<inlineCode parentName=\"p\">{`createTheme()`}</inlineCode>{` 函数定制阴影：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createTheme } from '@sinoui/theme';\n\nconst theme = createTheme({\n  shadows: [\n    'none',\n    '1px 1px 1px 1px red',\n    //其他23级阴影样式\n  ],\n});\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}