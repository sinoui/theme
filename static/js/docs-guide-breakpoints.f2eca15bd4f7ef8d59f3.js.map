{"version":3,"sources":["D:/Users/jacki/Documents/GitHub/theme/docs/components/BreakpointIndicator.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/guide/breakpoints.mdx"],"names":["indicatorCss","css","BreakpointIndicator","styled","div","breakpoint","makeShortcode","name","props","console","warn","layoutProps","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","ThemeProvider","ThemeContext","createTheme","useContext","useMediaQuery","Header","h1","color","fontFamily","fontSize","theme","breakpoints","sm","md","lg","className","isXs","minWidth","xs","maxWidth","isXl","xl","isMDXComponent"],"mappings":"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","file":"static/js/docs-guide-breakpoints.d6c596b2.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport breakpoint from 'styled-components-breakpoint';\nimport styled, { css } from 'styled-components';\n\nconst indicatorCss = css`\n  &::after {\n    content: '<--';\n    color: red;\n  }\n`;\n\nconst BreakpointIndicator = styled.div`\n  ${breakpoint('xs', 'sm')`\n    &.xs {\n      ${indicatorCss}\n    }\n  `}\n  ${breakpoint('sm', 'md')`\n    &.sm {\n      ${indicatorCss}\n    }\n  `}\n  ${breakpoint('md', 'lg')`\n    &.md {\n      ${indicatorCss}\n    }\n  `}\n  ${breakpoint('lg', 'xl')`\n    &.lg {\n      ${indicatorCss}\n    }\n  `}\n  ${breakpoint('xl')`\n    &.xl {\n      ${indicatorCss}\n    }\n  `}\n`;\n\nexport default BreakpointIndicator;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport styled, { ThemeProvider, ThemeContext } from 'styled-components';\nimport { createTheme } from '../../src';\nimport BreakpointIndicator from '@/BreakpointIndicator';\nimport { useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Header = makeShortcode(\"Header\");\nconst Demo = makeShortcode(\"Demo\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"断点-breakpoints\"\n    }}>{`断点 Breakpoints`}</h1>\n    <p><strong parentName=\"p\">{`在主题上下文中可以使用断点的 API。`}</strong></p>\n    <p>{`为了获得优质的用户体验， 我们的组件、页面需要在各种屏幕尺寸的设备上自适应布局。这就是常说的“响应性设计”。sinoui 实现了 `}<a parentName=\"p\" {...{\n        \"href\": \"https://material.io/design/layout/responsive-layout-grid.html#breakpoints\"\n      }}>{`material design 断点规范`}</a>{` 的简化版本。`}</p>\n    <h2 {...{\n      \"id\": \"断点范围\"\n    }}>{`断点范围`}</h2>\n    <p>{`我们常用的手机、平板、笔记本电脑、台式机电脑的屏幕尺寸有一定的范围，我们通过`}<strong parentName=\"p\">{`断点`}</strong>{`来划分屏幕尺寸范围。在日常开发中，我们常常需要考虑下面 5 个尺寸范围：`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`xs`}</inlineCode>{` - 手机。范围：`}<inlineCode parentName=\"li\">{`[0px, 600px)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sm`}</inlineCode>{` - 平板。范围：`}<inlineCode parentName=\"li\">{`[600px, 960px)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`md`}</inlineCode>{` - 笔记本电脑。范围：`}<inlineCode parentName=\"li\">{`[960px, 1280px)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lg`}</inlineCode>{` - 大尺寸屏幕电脑。范围：`}<inlineCode parentName=\"li\">{`[1280px, 1920px)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`xl`}</inlineCode>{` - 超大尺寸屏幕电脑。范围：`}<inlineCode parentName=\"li\">{`>= 1920px`}</inlineCode></li>\n    </ul>\n    <p>{`这些尺寸范围的起始点我们称之为`}<strong parentName=\"p\">{`断点`}</strong>{`，如下所示：`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`xs`}</inlineCode>{` - 超小。 `}<inlineCode parentName=\"li\">{`0px`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sm`}</inlineCode>{` - 小。 `}<inlineCode parentName=\"li\">{`600px`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`md`}</inlineCode>{` - 中等。 `}<inlineCode parentName=\"li\">{`960px`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lg`}</inlineCode>{` - 大。 `}<inlineCode parentName=\"li\">{`1280px`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`xl`}</inlineCode>{` - 超大。 `}<inlineCode parentName=\"li\">{`1920px`}</inlineCode></li>\n    </ul>\n    <p>{`尺寸范围与断点的关系如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`值        |0px     600px    960px    1280px   1920px\n断点      |xs      sm       md       lg       xl\n屏幕宽度  |--------|--------|--------|--------|-------->\n范围      |   xs   |   sm   |   md   |   lg   |   xl\n`}</code></pre>\n    <p>{`这些值可以从 `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` 对象中获取到，也可以自定义。`}</p>\n    <p>{`从 `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` 对象中获取断点值：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import styled from 'styled-components';\n\nconst Demo = styled.div\\`\n  @media (min-width: \\${(props) => props.theme.breakpoints.sm}) {\n    ...;\n  }\n\\`;\n`}</code></pre>\n    <p>{`自定义断点：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ThemeProvider } from 'styled-components';\nimport { createTheme } from '@sinoui/theme';\n\nconst theme = createTheme({\n  breakpoints: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n  },\n}); // bootstrap 4 断点规范\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Demo />\n    </ThemeProvider>\n  );\n};\n`}</code></pre>\n    <p>{`如上所示，我们可以在组件中使用断点来做响应性要求，可以在应用中使用断点控制布局。`}</p>\n    <h2 {...{\n      \"id\": \"css-媒体查询\"\n    }}>{`CSS 媒体查询`}</h2>\n    <p>{`CSS 媒体查询是做响应式开发的常用技术。我们可以使用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jameslnewell/styled-components-breakpoint\"\n      }}>{`styled-components-breakpoint`}</a>{` 来简化 CSS 媒体查询的开发。`}</p>\n    <p>{`首先安装 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jameslnewell/styled-components-breakpoint\"\n      }}>{`styled-components-breakpoint`}</a>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add styled-components-breakpoint\n`}</code></pre>\n    <p>{`如下方式使用：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import breakpoint from 'styled-components-breakpoint';\n\nconst Header = sytled.h1\\`\n  color: #444;\n  font-family: sans-serif;\n  font-size: 10px;\n  \n  \\${breakpoint('sm')\\`\n    font-size: 12px;\n  \\`}\n  \n  \\${breakpoint('md')\\`\n    font-size: 16px;\n  \\`}\n  \n  \\${breakpoint('lg')\\`\n    font-size: 24px;\n  \\`}\n\\`;\n`}</code></pre>\n    <p>{`生成的 CSS 如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.cESAFm {\n  font-size: 12px;\n}\n\n@media (min-width: 600px) {\n  .cESAFm {\n    font-size: 12px;\n  }\n}\n\n@media (min-width: 960px) {\n  .cESAFm {\n    font-size: 16px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .cESAFm {\n    font-size: 24px;\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`breakpoint(minWidth, maxWidth)`}</inlineCode>{` 函数有两个参数，第一个参数 `}<inlineCode parentName=\"p\">{`minWidth`}</inlineCode>{` 用来指定最小宽度（包含），第二个参数 `}<inlineCode parentName=\"p\">{`maxWidth`}</inlineCode>{` 用来指定最大宽度（不包含），如下所示：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`breakpoint('sm', 'lg');\n`}</code></pre>\n    <p>{`对应的 CSS 如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@media (min-width: 600px) and (max-width: 1279px);\n`}</code></pre>\n    <p>{`看看效果：`}</p>\n    <Playground __position={0} __code={'() => {\\n  const Header = styled.h1(props => ({\\n    color: \\'#444\\',\\n    fontFamily: \\'sans-serif\\',\\n    fontSize: 10,\\n    [`@media (min-width: ${props.theme.breakpoints.sm}px)`]: {\\n      fontSize: 12,\\n    },\\n    [`@media (min-width: ${props.theme.breakpoints.md}px)`]: {\\n      fontSize: 16,\\n    },\\n    [`@media (min-width: ${props.theme.breakpoints.lg}px)`]: {\\n      fontSize: 24,\\n    },\\n  }))\\n  const theme = createTheme()\\n\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Header>\\n        不同屏幕尺寸，字体大小不一样：\\n        <BreakpointIndicator className=\\\"xs\\\">xs(10px)</BreakpointIndicator>\\n        <BreakpointIndicator className=\\\"sm\\\">sm(12px)</BreakpointIndicator>\\n        <BreakpointIndicator className=\\\"md\\\">md(16px)</BreakpointIndicator>\\n        <BreakpointIndicator className=\\\"lg\\\">lg(24px)</BreakpointIndicator>\\n        <BreakpointIndicator className=\\\"xl\\\">xl(24px)</BreakpointIndicator>\\n      </Header>\\n    </ThemeProvider>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      styled,\n      ThemeProvider,\n      ThemeContext,\n      createTheme,\n      BreakpointIndicator,\n      useContext,\n      useMediaQuery\n    }} mdxType=\"Playground\">\n  {() => {\n        const Header = styled.h1(props => ({\n          color: '#444',\n          fontFamily: 'sans-serif',\n          fontSize: 10,\n          [`@media (min-width: ${props.theme.breakpoints.sm}px)`]: {\n            fontSize: 12\n          },\n          [`@media (min-width: ${props.theme.breakpoints.md}px)`]: {\n            fontSize: 16\n          },\n          [`@media (min-width: ${props.theme.breakpoints.lg}px)`]: {\n            fontSize: 24\n          }\n        }));\n        const theme = createTheme();\n        return <ThemeProvider theme={theme} mdxType=\"ThemeProvider\">\n  <Header mdxType=\"Header\">不同屏幕尺寸，字体大小不一样：\n    <BreakpointIndicator className=\"xs\" mdxType=\"BreakpointIndicator\">xs(10px)</BreakpointIndicator>\n    <BreakpointIndicator className=\"sm\" mdxType=\"BreakpointIndicator\">sm(12px)</BreakpointIndicator>\n    <BreakpointIndicator className=\"md\" mdxType=\"BreakpointIndicator\">md(16px)</BreakpointIndicator>\n    <BreakpointIndicator className=\"lg\" mdxType=\"BreakpointIndicator\">lg(24px)</BreakpointIndicator>\n    <BreakpointIndicator className=\"xl\" mdxType=\"BreakpointIndicator\">xl(24px)</BreakpointIndicator>\n  </Header>\n        </ThemeProvider>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"javascript-媒体查询\"\n    }}>{`JavaScript 媒体查询`}</h2>\n    <p>{`借助 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-responsive\"\n      }}>{`react-responsive`}</a>{`，我们可以很便捷地在 JavaScript 代码中应用媒体查询。`}</p>\n    <p>{`安装 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-responsive\"\n      }}>{`react-responsive`}</a>{`：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add react-responsive\n`}</code></pre>\n    <p>{`我们可以写一个 `}<inlineCode parentName=\"p\">{`useMediaQuery()`}</inlineCode>{` hook，用来获取媒体查询的结果：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { ThemeContext } from 'styled-components';\nimport React, { useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nfunction useMediaQuery(minWidth, maxWidth) {\n  const theme = useContext(ThemeContext);\n\n  const query = {};\n\n  if (minWidth) {\n    query[minWidth] = theme.breakpoints[minWidth];\n  }\n\n  if (maxWidth) {\n    query[maxWidth] = theme.breakpoints[maxWidth] - 1;\n  }\n\n  return useMediaQuery(query);\n}\n\nexport default useMediaQuery;\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Demo.tsx`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport useMediaQuery from './useMediaQuery';\n\nfunction Demo() {\n  const isXs = useMediaQuery('xs', 'sm');\n  const isXl = useMediaQuery('xl');\n  return (\n    <>\n      <div>xs尺寸范围：{\\`\\${isXs}\\`}</div>\n      <div>xl尺寸范围：{\\`\\${isXl}\\`}</div>\n    </>\n  );\n}\n`}</code></pre>\n    <p>{`效果如下：`}</p>\n    <Playground __position={1} __code={'() => {\\n  function Demo() {\\n    const theme = useContext(ThemeContext)\\n    const isXs = useMediaQuery({\\n      minWidth: theme.breakpoints.xs,\\n      maxWidth: theme.breakpoints.sm - 1,\\n    })\\n    const isXl = useMediaQuery({\\n      minWidth: theme.breakpoints.xl,\\n    })\\n\\n    return (\\n      <>\\n        <div>xs尺寸范围：{`${isXs}`}</div>\\n        <div>xl尺寸范围：{`${isXl}`}</div>\\n      </>\\n    )\\n  }\\n\\n  const theme = createTheme()\\n\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Demo />\\n    </ThemeProvider>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      styled,\n      ThemeProvider,\n      ThemeContext,\n      createTheme,\n      BreakpointIndicator,\n      useContext,\n      useMediaQuery\n    }} mdxType=\"Playground\">\n  {() => {\n        function Demo() {\n          const theme = useContext(ThemeContext);\n          const isXs = useMediaQuery({\n            minWidth: theme.breakpoints.xs,\n            maxWidth: theme.breakpoints.sm - 1\n          });\n          const isXl = useMediaQuery({\n            minWidth: theme.breakpoints.xl\n          });\n          return <>\n    <div>xs尺寸范围：{`${isXs}`}</div>\n    <div>xl尺寸范围：{`${isXl}`}</div>\n  </>;\n        }\n\n        const theme = createTheme();\n        return <ThemeProvider theme={theme} mdxType=\"ThemeProvider\">\n  <Demo mdxType=\"Demo\" />\n        </ThemeProvider>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}