{"version":3,"sources":["D:/Users/jacki/Documents/GitHub/theme/docs/components/Col.ts","D:/Users/jacki/Documents/GitHub/theme/docs/components/StatusBar.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/components/ImageWithTitle.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/components/Row.ts","D:/Users/jacki/Documents/GitHub/theme/docs/components/Video.tsx","D:/Users/jacki/Documents/GitHub/theme/docs/components/images/pause.svg","D:/Users/jacki/Documents/GitHub/theme/docs/components/images/play.svg","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-coloredtextbg-basil.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-coloredtextbg-caution-owl.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-opacity-baseline-do.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-opacity-baseline-dont.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-selectedtext-baseline.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/color-system-images/color-legibility-selectedtext-reply.png","D:/Users/jacki/Documents/GitHub/theme/docs/material-design/color/text-legibility.mdx"],"names":["widthCss","css","props","width","xs","breakpointKeys","breakpointsCss","filter","item","reduce","result","theme","breakpoints","maxWidth","flexBasis","Col","styled","div","borderColor","ok","no","caution","color","titleMap","StatusBarWrapper","status","StatusBar","Wrapper","section","ImageWithTitle","children","img","video","noGutter","marginTop","Comp","style","fontSize","src","alt","minWidth","Video","horizontalGutterStyle","gutter","gutterStyle","Row","Array","isArray","play","isPlaying","pause","isHover","useState","setIsPlaying","setIsHover","videoRef","useRef","onMouseEnter","onMouseLeave","loop","muted","preload","onClick","current","ref","module","exports","layoutProps","MDXContent","components","mdxType","parentName","legibilityOpacityBasilineDo","legibilityOpacityBasilineDont","sm","coloredtextbgBasil","coloredtextbgCautionOwl","selectedtextBaseline","selectedtextReply","isMDXComponent"],"mappings":"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","file":"static/js/docs-material-design-color-text-legibility.50852717.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { Theme } from '../../src/types';\n\ntype Width =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\ninterface Props {\n  xs?: Width;\n  sm?: Width;\n  md?: Width;\n  lg?: Width;\n  xl?: Width;\n}\n\nconst widthCss = css((props: Props) => {\n  const width = props.xs;\n\n  if (width > 0) {\n    return `\n      max-width: ${(width / 24) * 100}%;\n      flex-basis: ${(width / 24) * 100}%;\n      flex-grow: 0;\n    `;\n  }\n  return null;\n});\n\nconst breakpointKeys = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointsCss = css((props: Props & { theme: Theme }) => {\n  return breakpointKeys\n    .filter((item) => props[item] > 0)\n    .reduce((result, item) => {\n      // eslint-disable-next-line no-param-reassign\n      result[\n        `@media screen and (min-width: ${props.theme.breakpoints[item]}px)`\n      ] = {\n        '&': {\n          width: `${(props[item] / 24) * 100}%`,\n          maxWidth: `${(props[item] / 24) * 100}%`,\n          flexBasis: `${(props[item] / 24) * 100}%`,\n        },\n      };\n      return result;\n    }, {} as any);\n});\n\nconst Col = styled.div<Props>`\n  flex-grow: 1;\n  ${widthCss}\n  ${breakpointsCss}\n\n  box-sizing: border-box;\n  margin: 0;\n`;\n\nexport default Col;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  status?: 'ok' | 'no' | 'caution';\n}\n\nconst borderColor = {\n  ok: '#4caf50',\n  no: '#d32f2f',\n  caution: '#f9a825',\n};\n\nconst color = {\n  ok: '#2e7b32',\n  no: '#d32f2f',\n  caution: '#f57f17',\n};\n\nconst titleMap = {\n  ok: '推荐。',\n  no: '不能。',\n  caution: '当心',\n};\n\nconst StatusBarWrapper = styled.div<Props>`\n  border-top: 15px solid ${(props) => borderColor[props.status]};\n  color: ${(props) => color[props.status]};\n  font-size: 14px;\n  padding: 10px 0 2px;\n  font-weight: 600;\n`;\n\nconst StatusBar = ({ status }: Props) => {\n  if (!status) {\n    return null;\n  }\n\n  return (\n    <StatusBarWrapper status={status}>{titleMap[status]}</StatusBarWrapper>\n  );\n};\n\nexport default StatusBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Video from './Video';\nimport StatusBar from './StatusBar';\n\ninterface Props {\n  children?: React.ReactNode;\n  img?: string;\n  video?: string;\n  noGutter?: boolean;\n  status?: 'ok' | 'no' | 'caution';\n  marginTop?: number;\n}\n\nconst Wrapper = styled.section`\n  margin-bottom: 48px;\n`;\n\n/**\n * 带标题的图片\n */\nexport default function ImageWithTitle({\n  children,\n  img,\n  video,\n  noGutter,\n  status,\n  marginTop,\n}: Props) {\n  const Comp = noGutter ? 'section' : Wrapper;\n  return (\n    <Comp\n      style={{\n        marginTop,\n        fontSize: 14,\n        color: '#616161',\n      }}\n    >\n      {img && <img src={img} alt=\"img\" style={{ minWidth: '100%' }} />}\n      {video && <Video src={video} />}\n      <StatusBar status={status} />\n      <div>{children}</div>\n    </Comp>\n  );\n}\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  gutter?: number | [number, number];\n}\n\nconst horizontalGutterStyle = css<{ gutter: number }>`\n  width: calc(100% + ${({ gutter }) => gutter}px);\n  margin: 0px -${({ gutter }) => gutter / 2}px;\n  & > * {\n    padding: 0 ${({ gutter }) => gutter / 2}px;\n  }\n`;\n\nconst gutterStyle = css<{ gutter: [number, number] }>`\n  width: calc(100% + ${({ gutter }) => gutter[0]}px);\n  margin: -${({ gutter }) => gutter[1] / 2} -${({ gutter }) => gutter[0] / 2}px;\n\n  & > * {\n    padding: ${({ gutter }) => gutter[1] / 2}px\n      ${({ gutter }) => gutter[0] / 2}px;\n  }\n`;\n\nconst Row = styled.div<Props>`\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  ${({ gutter }) =>\n    typeof gutter === 'number'\n      ? horizontalGutterStyle\n      : Array.isArray(gutter) && gutterStyle};\n`;\n\nexport default Row;\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport pause from './images/pause.svg';\nimport play from './images/play.svg';\n\nconst Wrapper = styled.div<{ isPlaying: boolean; isHover: boolean }>`\n  max-width: 100%;\n  width: 100%;\n  position: relative;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  display: inline-flex;\n\n  & > video {\n    max-width: 100%;\n  }\n\n  &::before {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    pointer-events: none;\n    content: '';\n\n    background: rgba(0, 0, 0, 0.5) url(${play}) no-repeat center center;\n    background-size: 72px;\n\n    transition: background-size 235ms cubic-bezier(0.4, 0, 0.2, 1),\n      opacity 235ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    ${(props) =>\n      props.isPlaying &&\n      `\n      background-image: url(${pause});\n      opacity: ${props.isHover ? 1 : 0};\n    `}\n  }\n`;\n\n/**\n * 视频组件\n */\nfunction Video({ src }: { src: string }) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isHover, setIsHover] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const handleClick = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n      videoRef.current.pause();\n    } else {\n      setIsPlaying(true);\n      setIsHover(false);\n      videoRef.current.play();\n    }\n  };\n\n  const handleMouseEnter = () => {\n    setIsHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHover(false);\n  };\n\n  return (\n    <Wrapper\n      isPlaying={isPlaying}\n      isHover={isHover}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <video loop muted preload=\"metadata\" onClick={handleClick} ref={videoRef}>\n        <source src={src} />\n      </video>\n    </Wrapper>\n  );\n}\n\nexport default Video;\n","module.exports = __webpack_public_path__ + \"static/img/pause.1f45001d.svg\";","module.exports = __webpack_public_path__ + \"static/img/play.7ea338aa.svg\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-coloredtextbg-basil.5f623eb5.png\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-coloredtextbg-caution-owl.ae553fa5.png\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-opacity-baseline-do.1eb0a258.png\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-opacity-baseline-dont.ebfe4a06.png\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-selectedtext-baseline.8f2ee0a9.png\";","module.exports = __webpack_public_path__ + \"static/img/color-legibility-selectedtext-reply.93a3485a.png\";","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport ImageWithTitle from '@/ImageWithTitle';\nimport Row from '@/Row';\nimport Col from '@/Col';\nimport legibilityOpacityBasilineDo from './color-system-images/color-legibility-opacity-baseline-do.png';\nimport legibilityOpacityBasilineDont from './color-system-images/color-legibility-opacity-baseline-dont.png';\nimport coloredtextbgBasil from './color-system-images/color-legibility-coloredtextbg-basil.png';\nimport coloredtextbgCautionOwl from './color-system-images/color-legibility-coloredtextbg-caution-owl.png';\nimport selectedtextBaseline from './color-system-images/color-legibility-selectedtext-baseline.png';\nimport selectedtextReply from './color-system-images/color-legibility-selectedtext-reply.png';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"文本可读性-text-legibility\"\n    }}>{`文本可读性 Text legibility`}</h1>\n    <p>{`颜色在文本可读性上扮演着重要的角色。`}</p>\n    <h2 {...{\n      \"id\": \"可读性标准-legibility-standards\"\n    }}>{`可读性标准 Legibility standards`}</h2>\n    <p>{`所有文本必须清晰可辨并且符合可访问性标准。`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\"\n      }}>{`WCAG 2.0`}</a>{` 规定：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`普通文本的颜色需要与其背景色达到 `}<strong parentName=\"li\">{`4.5:1`}</strong>{` 的标准，`}</li>\n      <li parentName=\"ul\">{`大文本的颜色需要与其背景色达到 `}<strong parentName=\"li\">{`3:1`}</strong>{` 的标准。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"文本与背景-text-backgrounds\"\n    }}>{`文本与背景 Text backgrounds`}</h2>\n    <h3 {...{\n      \"id\": \"在有颜色背景上的文本-text-on-colored-backgrounds\"\n    }}>{`在有颜色背景上的文本 Text on colored backgrounds`}</h3>\n    <p>{`黑色文本用于浅色背景上，而白色文本用于深色背景上。如果您的应用有浅色主题和深色主题，则需要确保文本颜色与这些颜色主题的对比度。`}</p>\n    <p>{`有颜色的背景或者文本还会更改有关文本不透明度和状态的规则。`}</p>\n    <h3 {...{\n      \"id\": \"使用文本不透明度-using-text-opacity\"\n    }}>{`使用文本不透明度 Using text opacity`}</h3>\n    <p>{`不要在有颜色的背景上使用灰色文本和图标，而是通过降低白色或者黑色文本的不透明度来创建更好的对比度。`}</p>\n    <p>{`例如：在绿色背景上以 75% 不透明度显示的黑色文本使该文本显示为黑色，并带有绿色提示。`}</p>\n    <p>{`或者，您可以通过下面的步骤计算出文本的颜色：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`降低在绿色背景上显示的黑色文本的不透明度`}</li>\n      <li parentName=\"ul\">{`确定产生的深绿色的十六进制值`}</li>\n      <li parentName=\"ul\">{`使用这个十六进制值作为文本颜色`}</li>\n    </ul>\n    <p>{`在这种情况下，如果背景颜色发生了更改，则还必须更新十六进制颜色。`}</p>\n\n    <ImageWithTitle status=\"ok\" img={legibilityOpacityBasilineDo} mdxType=\"ImageWithTitle\">\n  在彩色表面上使用透明的黑色文本以保持可读性。\n    </ImageWithTitle>\n    <ImageWithTitle status=\"no\" img={legibilityOpacityBasilineDont} mdxType=\"ImageWithTitle\">\n  不要在彩色表面上使用不透明灰色文本，因为这样不清晰。\n    </ImageWithTitle>\n    <h3 {...{\n      \"id\": \"深色文本在浅色背景上-dark-text-on-light-backgrounds\"\n    }}>{`深色文本在浅色背景上 Dark text on light backgrounds`}</h3>\n    <p>{`深色文本(`}<inlineCode parentName=\"p\">{`#000000`}</inlineCode>{`)在浅色背景(`}<inlineCode parentName=\"p\">{`#FFFFFF`}</inlineCode>{`)上应启用以下不透明度级别：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`高度重要的文本使用 87% 的不透明度，即`}<inlineCode parentName=\"li\">{`rgba(0, 0, 0, 0.87)`}</inlineCode></li>\n      <li parentName=\"ul\">{`中等重要的文本使用 60% 的不透明度，即`}<inlineCode parentName=\"li\">{`rgba(0, 0, 0, 0.6)`}</inlineCode></li>\n      <li parentName=\"ul\">{`不可用的文本使用 38% 的不透明度，即`}<inlineCode parentName=\"li\">{`rgba(0, 0, 0, 0.38)`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"彩色文本与背景-colored-text-and-backgrounds\"\n    }}>{`彩色文本与背景 Colored text and backgrounds`}</h3>\n    <p>{`彩色文本应谨慎使用，它主要用来吸引注意、标注重点。通常应为标题、按钮和链接使用彩色文本。`}</p>\n\n    <Row gutter={48} mdxType=\"Row\">\n  <Col xs={24} sm={12} mdxType=\"Col\">\n    <ImageWithTitle status=\"ok\" img={coloredtextbgBasil} mdxType=\"ImageWithTitle\">\n      大标题和短文本片段非常适合使用彩色文本。\n    </ImageWithTitle>\n  </Col>\n  <Col xs={24} sm={12} mdxType=\"Col\">\n    <ImageWithTitle status=\"caution\" img={coloredtextbgCautionOwl} mdxType=\"ImageWithTitle\">\n      主体文本是彩色的，这很难阅读。\n      </ImageWithTitle>\n  </Col>\n    </Row>\n    <h2 {...{\n      \"id\": \"文本类型-text-types\"\n    }}>{`文本类型 Text types`}</h2>\n    <h3 {...{\n      \"id\": \"帮助文本-helper-text\"\n    }}>{`帮助文本 Helper Text`}</h3>\n    <p>{`帮助文本会给输入框添加上下文语义，比如告知输入框怎么使用。它可以采用品牌色，但是需要遵循 WCAG 的可读性标准。`}</p>\n    <p>{`比如，在浅色背景上，帮助文本的颜色设定为：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`重要的帮助文本：rgba(0, 0, 0, 0.87)`}</li>\n      <li parentName=\"ul\">{`普通的帮助文本：rbga(0, 0, 0, 0.6)`}</li>\n      <li parentName=\"ul\">{`错误帮助文本：#B00020`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"选中的文本-selected-text\"\n    }}>{`选中的文本 Selected Text`}</h3>\n    <p>{`为了突出品牌，您可以使用主颜色或者辅助色的变体作为文本选中颜色。`}</p>\n    <p>{`选中文本应与选中颜色相对清晰，并且选中颜色应与背景色形成对比。或者可以采用其它方式表示选中的文本，比如：描边、运动、选中标记图标。`}</p>\n\n    <Row gutter={48} mdxType=\"Row\">\n  <Col xs={24} sm={12} mdxType=\"Col\">\n    <ImageWithTitle img={selectedtextBaseline} mdxType=\"ImageWithTitle\">\n      <ol>\n        <li>文本</li>\n        <li>文本选中颜色</li>\n        <li>背景</li>\n      </ol>\n    </ImageWithTitle>\n  </Col>\n  <Col xs={24} sm={12} mdxType=\"Col\">\n    <ImageWithTitle img={selectedtextReply} mdxType=\"ImageWithTitle\">\n      可以使用辅助色作为文本选中颜色。\n    </ImageWithTitle>\n  </Col>\n    </Row>\n    <h3 {...{\n      \"id\": \"图标和其它元素-icons-and-other-symbols\"\n    }}>{`图标和其它元素 Icons and Other symbols`}</h3>\n    <p>{`图标和其他元素不需要遵循 WCAG 可读性标准，但应尽可能可见以明确地指示功能或传达信息。`}</p>\n    <p>{`例如，深色图标（#000000）或其他元素相对于浅色背景（#FFFFFF），应遵循以下不透明度级别：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`活动图标的不透明度为：87%`}</li>\n      <li parentName=\"ul\">{`非活动图标的不透明度为：60%`}</li>\n      <li parentName=\"ul\">{`不可用图标的不透明度为：38%`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}